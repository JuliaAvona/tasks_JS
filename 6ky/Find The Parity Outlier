//1

function findOutlier(integers){
  let odd = integers.filter((item) => Math.abs(item % 2) === 0);
  let even = integers.filter((item) => Math.abs(item % 2) === 1);
  return odd.length < even.length ? +odd.join(' ') : +even.join(' ');
}

//2

function findOutlier(integers) {
  let status = 0;
  let count = 0;
  
  for (let i = 0; i < 3; i++) {
    if (Math.abs(integers[i] % 2) === 0) {
      count++;
    }
  }

  if (count >= 2) {
    status = 1;
  }

  return returnInteg(integers, status);

}

const returnInteg = (arr, statusNum) => {
      for (let i = 0; i < arr.length; i++) {
      if (Math.abs(arr[i] % 2) === statusNum) {
        return arr[i];
      }
    }
};

/*

You are given an array (which will have a length of at least 3, but could be very large) containing integers. The array is either entirely comprised of odd integers or entirely comprised of even integers except for a single integer N. Write a method that takes the array as an argument and returns this "outlier" N.

Examples
[2, 4, 0, 100, 4, 11, 2602, 36]
Should return: 11 (the only odd number)

[160, 3, 1719, 19, 11, 13, -21]
Should return: 160 (the only even number)

*/
